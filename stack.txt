
 class Stack {
    private int maxSize;
    private int[] stackArray;
    private int top;
    public Stack(int size) {
        maxSize = size;
        stackArray = new int[maxSize];
        top = -1;
    }

    public void push(int value) {
        if (top == maxSize - 1) {
            System.out.println("Stack is full! Cannot push " + value);
        } else {
            stackArray[++top] = value;
            System.out.println(value + " pushed to stack");
        }
    }
    public int pop() {
        if (top == -1) {
            System.out.println("Stack is empty! Cannot pop.");
            return -1; // or throw exception
        } else {
            return stackArray[top--];
        }
    }
    public int peek() {
        if (top == -1) {
            System.out.println("Stack is empty! Nothing to peek.");
            return -1; // or throw exception
        } else {
            return stackArray[top];
        }
    }
    public boolean isEmpty() {
        return (top == -1);
    }
    public boolean isFull() {
        return (top == maxSize - 1);
    }
    public static void main(String[] args) {
        Stack stack = new aStack(5);
        stack.push(10);
        stack.push(20);
        stack.push(30);

        System.out.println("Top element is " + stack.peek());

        System.out.println("Popped element is " + stack.pop());
        System.out.println("Popped element is " + stack.pop());

        System.out.println("Is stack empty? " + stack.isEmpty());
    }
}